package uniandes.fabricasw.ecotouring.core;
// Generated Mar 20, 2016 12:10:37 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "PERSON", schema = "ADMIN")
@NamedQueries({ @NamedQuery(name = "uniandes.fabricasw.ecotouring.core.Person.findAll", 
query = "SELECT p FROM Person p") })

public class Person implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long id;
	private Person person;
	private Type typeByRole;
	private Type typeByCategory;
	private String name;
	private String fullName;
	private String jobTitle;
	private String username;
	private String password;
	private String address;
	private String email;
	private Set<Conversation> conversations = new HashSet<Conversation>(0);
	private Set<Transaction> transactions = new HashSet<Transaction>(0);
	private Set<ItemComment> itemComments = new HashSet<ItemComment>(0);
	private Set<Person> persons = new HashSet<Person>(0);
	private Set<Item> items = new HashSet<Item>(0);

	public Person() {
	}

	public Person(long id, String name) {
		this.id = id;
		this.name = name;
	}
	
	public Person(String fullName, String jobTitle) {
		this.fullName = fullName;
		this.jobTitle = jobTitle;
	}	

	public Person(long id, Person person, Type typeByRole, Type typeByCategory, String name, String fullName,
			String jobTitle, String username, String password, String address, String email,
			Set<Conversation> conversations, Set<Transaction> transactions, Set<ItemComment> itemComments,
			Set<Person> persons, Set<Item> items) {
		this.id = id;
		this.person = person;
		this.typeByRole = typeByRole;
		this.typeByCategory = typeByCategory;
		this.name = name;
		this.fullName = fullName;
		this.jobTitle = jobTitle;
		this.username = username;
		this.password = password;
		this.address = address;
		this.email = email;
		this.conversations = conversations;
		this.transactions = transactions;
		this.itemComments = itemComments;
		this.persons = persons;
		this.items = items;
	}

	@Id
	@GeneratedValue(generator = "InvSeq")
	@SequenceGenerator(name = "InvSeq", sequenceName = "PERSON_SEQ", allocationSize = 5)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT")
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROLE")
	public Type getTypeByRole() {
		return this.typeByRole;
	}

	public void setTypeByRole(Type typeByRole) {
		this.typeByRole = typeByRole;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CATEGORY")
	public Type getTypeByCategory() {
		return this.typeByCategory;
	}

	public void setTypeByCategory(Type typeByCategory) {
		this.typeByCategory = typeByCategory;
	}

	@Column(name = "FULLNAME", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "NAME", length = 20)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "JOBTITLE", length = 20)
	public String getJobTitle() {
		return this.jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	@Column(name = "USERNAME", length = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "ADDRESS", length = 20)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "EMAIL", length = 20)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Conversation> getConversations() {
		return this.conversations;
	}

	public void setConversations(Set<Conversation> conversations) {
		this.conversations = conversations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Transaction> getTransactions() {
		return this.transactions;
	}

	public void setTransactions(Set<Transaction> transactions) {
		this.transactions = transactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<ItemComment> getItemComments() {
		return this.itemComments;
	}

	public void setItemComments(Set<ItemComment> itemComments) {
		this.itemComments = itemComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Person> getPersons() {
		return this.persons;
	}

	public void setPersons(Set<Person> persons) {
		this.persons = persons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}

}
