package uniandes.fabricasw.ecotouring.core;
// Generated Mar 20, 2016 12:10:37 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Conversation generated by hbm2java
 */
@Entity
@Table(name = "CONVERSATION", schema = "ADMIN")

@NamedQueries({ @NamedQuery(name = "uniandes.fabricasw.ecotouring.core.Conversation.findByItem",
query = "SELECT i FROM Conversation i WHERE item = 1") })

public class Conversation {

	private BigDecimal id;
	private Person person;
	private Conversation conversation;
	private Type type;
	private Item item;
	private String entry;
	private Date dateEntry;
	private Set<Conversation> conversations = new HashSet<Conversation>(0);

	public Conversation() {
	}

	public Conversation(BigDecimal id, Person person, Type type, Item item, String entry, Date dateEntry) {
		this.id = id;
		this.person = person;
		this.type = type;
		this.item = item;
		this.entry = entry;
		this.dateEntry = dateEntry;
	}

	public Conversation(BigDecimal id, Person person, Conversation conversation, Type type, Item item, String entry,
			Date dateEntry, Set<Conversation> conversations) {
		this.id = id;
		this.person = person;
		this.conversation = conversation;
		this.type = type;
		this.item = item;
		this.entry = entry;
		this.dateEntry = dateEntry;
		this.conversations = conversations;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AUTHOR", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT")
	public Conversation getConversation() {
		return this.conversation;
	}

	public void setConversation(Conversation conversation) {
		this.conversation = conversation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TYPE", nullable = false)
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ITEM", nullable = false)
	public Item getItem() {
		return this.item;
	}

	public void setItem(Item item) {
		this.item = item;
	}

	@Column(name = "ENTRY", nullable = false, length = 4000)
	public String getEntry() {
		return this.entry;
	}

	public void setEntry(String entry) {
		this.entry = entry;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_ENTRY", nullable = false, length = 7)
	public Date getDateEntry() {
		return this.dateEntry;
	}

	public void setDateEntry(Date dateEntry) {
		this.dateEntry = dateEntry;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "conversation")
	public Set<Conversation> getConversations() {
		return this.conversations;
	}

	public void setConversations(Set<Conversation> conversations) {
		this.conversations = conversations;
	}

}
